<#@ template language="C#" debug="true"   hostspecific="true"#>
<#@ output extension=".cshtml"#> 
<#@ include file="..\Lib\Imports.include.t4" #>
<#@ include file="..\Lib\lib.ttinclude" #>
<#       
    EntityService<TrainingISModel> entityService = new EntityService<TrainingISModel>();
	List<Type> Entities = entityService.getAllEntities();

	// Create file for All Entities
	var manager = TemplateFileManager.Create(this);
  
	foreach(Type entityType in Entities)
    {   
	    manager.StartNewFile(entityType.Name.Pluralize() + "_Details.cshtml");
		Dictionary<Type, List<Type>> Default_ModelsViewsTypes = new DefaultModelView_MetaData().ModelsViewsTypes;
		View_CodeGenerator<TrainingISModel> View_CodeGenerator = new View_CodeGenerator<TrainingISModel>(entityType,Default_ModelsViewsTypes);
		ModelView_CodeGenerator<TrainingISModel>  modelView_CodeGenerator = new ModelView_CodeGenerator<TrainingISModel>(entityType, Default_ModelsViewsTypes);
		Tags<TrainingISModel> tags = new Tags<TrainingISModel>(entityType,modelView_CodeGenerator.getDetailsModelView_Type());
#>
<#=View_CodeGenerator.GetUsingModel_In_DetailsView()#>
@section Style{
    @Styles.Render("~/Content/Manager/Details")
}
@{
    ViewBag.Title =   @msg_app.Details;
}

<div class="x_panel">
    <div class="x_title">
        <h2> @Model.ToString()</h2>
        <div class="clearfix"></div>
    </div> 
    <div class="x_content">
	 
	<table class="details_model">
<# foreach(var propertyInfo in modelView_CodeGenerator.GetDetailsProperties()) { #>
		<tr>
			<td>@Html.DisplayNameFor(model => model.<#= propertyInfo.Name #>)</td>
			<td><#= tags.DisplayFor("", propertyInfo) #></td>
		</tr>
<# } #> 
    </table>
   </div>
</div>

<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
		<a href="@Url.Action("Edit")/@Model.Id" class="btn btn-app">
            <i class="fa fa-edit"></i>  @msg_app.Edit
        </a>
    </div>
</div>  


<#
} // for
manager.Process();
#>


