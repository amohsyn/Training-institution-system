  
 
 




  
@model TrainingIS.Entities.ModelsViews.Default_Form_CalendarDay_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.Date, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.DateName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.DateName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateName, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.DateNameAbbrev, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.DateNameAbbrev, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateNameAbbrev, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.DayOfWeek, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.DayOfWeek, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DayOfWeek, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.IsWeekend, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.IsWeekend, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsWeekend, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.WeekNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.WeekNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WeekNumber, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.WeekBeginDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.WeekBeginDate, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.WeekBeginDate, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.WeekEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.WeekEndDate, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.WeekEndDate, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.CalendarMonthName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.CalendarMonthName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CalendarMonthName, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.CalendarMonthNameAbbrev, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.CalendarMonthNameAbbrev, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CalendarMonthNameAbbrev, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.CalendarMonthBegin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.CalendarMonthBegin, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.CalendarMonthBegin, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.CalendarMonthEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.CalendarMonthEnd, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.CalendarMonthEnd, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.CalendarMonthNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.CalendarMonthNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CalendarMonthNumber, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.CalendarYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.CalendarYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CalendarYear, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.FiscalYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.FiscalYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FiscalYear, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.DayOfYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.DayOfYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DayOfYear, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.CalendarYearBegin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.CalendarYearBegin, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.CalendarYearBegin, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.CalendarYearEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.CalendarYearEnd, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.CalendarYearEnd, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.FiscalYearBegin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.FiscalYearBegin, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.FiscalYearBegin, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.FiscalYearEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.FiscalYearEnd, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.FiscalYearEnd, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_ApplicationParam_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_LogWork_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.OperationWorkType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @(Html.EnumDropDownList<OperationWorkTypes>("OperationWorkType", new { @class = "form-control" }))
                @Html.ValidationMessageFor(model => model.OperationWorkType, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.OperationReference, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.OperationReference, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OperationReference, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.EntityType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.EntityType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EntityType, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_RoleApp_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_ControllerApp_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_ActionControllerApp_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.ControllerAppId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("ControllerAppId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.ControllerAppId, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_AuthrorizationApp_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {
			SelectFilter("ControllerAppId", "Selected_ActionControllerApps");

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.RoleAppId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("RoleAppId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.RoleAppId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.ControllerAppId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("ControllerAppId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.ControllerAppId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.isAllAction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.isAllAction, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.isAllAction, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Selected_ActionControllerApps, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.Select_Tag(model => model.Selected_ActionControllerApps, ViewBag.Data_ActionControllerApps as List<BaseEntity>,true);
                @Html.ValidationMessageFor(model => model.Selected_ActionControllerApps, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_EntityPropertyShortcut_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.EntityName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.EntityName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EntityName, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.PropertyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.PropertyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PropertyName, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.PropertyShortcutName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.PropertyShortcutName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PropertyShortcutName, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_ClassroomCategory_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_Nationality_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_Project_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.EndtDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.EndtDate, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.EndtDate, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.isPublic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.isPublic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.isPublic, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_Category_JustificationAbsence_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_Category_WarningTrainee_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_TrainingYear_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.EndtDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.EndtDate, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.EndtDate, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_TrainingType_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_SeanceDay_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Day, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Day, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Day, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_SeanceNumber_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_YearStudy_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_Specialty_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.SectorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("SectorId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.SectorId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.TrainingLevelId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("TrainingLevelId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.TrainingLevelId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_Schoollevel_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_FormerSpecialty_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_TrainingLevel_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_Metier_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_Sector_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_Function_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_Mission_Working_Group_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.DecisionAuthority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @(Html.EnumDropDownList<DecisionsAuthorities>("DecisionAuthority", new { @class = "form-control" }))
                @Html.ValidationMessageFor(model => model.DecisionAuthority, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_SanctionCategory_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.DecisionAuthority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @(Html.EnumDropDownList<DecisionsAuthorities>("DecisionAuthority", new { @class = "form-control" }))
                @Html.ValidationMessageFor(model => model.DecisionAuthority, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.WorkflowOrder, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.WorkflowOrder, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WorkflowOrder, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Number_Of_Days_Of_Exclusion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Number_Of_Days_Of_Exclusion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Number_Of_Days_Of_Exclusion, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_Classroom_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.ClassroomCategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("ClassroomCategoryId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.ClassroomCategoryId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_ModuleTraining_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.SpecialtyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("SpecialtyId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.SpecialtyId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.MetierId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("MetierId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.MetierId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.YearStudyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("YearStudyId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.YearStudyId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.HourlyMass, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.HourlyMass, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HourlyMass, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Hourly_Mass_To_Teach, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Hourly_Mass_To_Teach, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hourly_Mass_To_Teach, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.FormerModelsViews.FormerFormView
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

			ReadFrom("Login", "Email");
			ReadFrom("Password", "RegistrationNumber");
	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.RegistrationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.RegistrationNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RegistrationNumber, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div> 
            <div class="form-group">
				@Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
					<input style="display:none" type="text" name="Photo_Reference" id="Photo_Reference" />
					<input type="file"
                               id="Upload_Photo"
                               data-picture_name_id="Photo_Reference"
                               data-picture_preview_id="Photo_Preview"
                               style="display:none"
                               class="Upload_GPicture" />

				@if (Model.Photo != null)
                { 
					  @Html.Partial("GAppComponents/GPicture/_Image", new KeyValuePair<String,GPicture>("Photo",Model.Photo))
                }
                else
                {
					 @Html.Partial("GAppComponents/GPicture/_Image", new KeyValuePair<String, GPicture>("Photo", new GPicture()) )
                }
				@Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                </div>
            </div>     
         <div class="form-group"> 
            @Html.LabelFor(model => model.FormerSpecialtyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("FormerSpecialtyId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.FormerSpecialtyId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.WeeklyHourlyMass, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.WeeklyHourlyMass, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WeeklyHourlyMass, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.FirstNameArabe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.FirstNameArabe, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstNameArabe, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.LastNameArabe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.LastNameArabe, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastNameArabe, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.NationalityId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("NationalityId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.NationalityId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @(Html.EnumDropDownList<SexEnum>("Sex", new { @class = "form-control" }))
                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.Birthdate, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.BirthPlace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.BirthPlace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthPlace, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.CIN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.CIN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CIN, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Cellphone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Cellphone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cellphone, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.CreateUserAccount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.CreateUserAccount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateUserAccount, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_Administrator_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.RegistrationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.RegistrationNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RegistrationNumber, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.CreateUserAccount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.CreateUserAccount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateUserAccount, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.FirstNameArabe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.FirstNameArabe, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstNameArabe, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.LastNameArabe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.LastNameArabe, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastNameArabe, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @(Html.EnumDropDownList<SexEnum>("Sex", new { @class = "form-control" }))
                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.Birthdate, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.NationalityId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("NationalityId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.NationalityId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.BirthPlace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.BirthPlace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthPlace, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.CIN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.CIN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CIN, "", new { @class = "text-danger" })
            </div>
        </div> 
            <div class="form-group">
				@Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
					<input style="display:none" type="text" name="Photo_Reference" id="Photo_Reference" />
					<input type="file"
                               id="Upload_Photo"
                               data-picture_name_id="Photo_Reference"
                               data-picture_preview_id="Photo_Preview"
                               style="display:none"
                               class="Upload_GPicture" />

				@if (Model.Photo != null)
                { 
					  @Html.Partial("GAppComponents/GPicture/_Image", new KeyValuePair<String,GPicture>("Photo",Model.Photo))
                }
                else
                {
					 @Html.Partial("GAppComponents/GPicture/_Image", new KeyValuePair<String, GPicture>("Photo", new GPicture()) )
                }
				@Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                </div>
            </div>     
         <div class="form-group"> 
            @Html.LabelFor(model => model.Cellphone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Cellphone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cellphone, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.FaceBook, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.FaceBook, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FaceBook, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.WebSite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.WebSite, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WebSite, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.GroupModelsViews.CreateGroupView
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.TrainingYearId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("TrainingYearId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.TrainingYearId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.SpecialtyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("SpecialtyId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.SpecialtyId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.TrainingTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("TrainingTypeId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.TrainingTypeId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.YearStudyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("YearStudyId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.YearStudyId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_Schedule_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.TrainingYearId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("TrainingYearId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.TrainingYearId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.EndtDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.EndtDate, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.EndtDate, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_TaskProject_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.ProjectId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("ProjectId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.TaskState, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @(Html.EnumDropDownList<TaskStates>("TaskState", new { @class = "form-control" }))
                @Html.ValidationMessageFor(model => model.TaskState, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.EndtDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.EndtDate, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.EndtDate, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.isPublic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.isPublic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.isPublic, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_JustificationAbsence_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.TraineeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("TraineeId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.TraineeId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Category_JustificationAbsenceId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("Category_JustificationAbsenceId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Category_JustificationAbsenceId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control has-feedback-left datetimepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.EndtDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.EndtDate, new { @class = "form-control has-feedback-left datetimepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.EndtDate, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_WarningTrainee_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.TraineeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("TraineeId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.TraineeId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.WarningDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.WarningDate, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.WarningDate, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Category_WarningTraineeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("Category_WarningTraineeId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Category_WarningTraineeId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_Trainee_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.CNE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.CNE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CNE, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.DateRegistration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.DateRegistration, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.DateRegistration, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.isActif, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @(Html.EnumDropDownList<IsActifEnum>("isActif", new { @class = "form-control" }))
                @Html.ValidationMessageFor(model => model.isActif, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.SchoollevelId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("SchoollevelId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.SchoollevelId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.SpecialtyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("SpecialtyId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.SpecialtyId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.YearStudyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("YearStudyId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.YearStudyId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.GroupId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("GroupId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.FirstNameArabe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.FirstNameArabe, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstNameArabe, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.LastNameArabe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.LastNameArabe, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastNameArabe, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @(Html.EnumDropDownList<SexEnum>("Sex", new { @class = "form-control" }))
                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.TextBoxFor(model => model.Birthdate, new { @class = "form-control has-feedback-left datepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.NationalityId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("NationalityId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.NationalityId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.BirthPlace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.BirthPlace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthPlace, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.CIN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.CIN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CIN, "", new { @class = "text-danger" })
            </div>
        </div> 
            <div class="form-group">
				@Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
					<input style="display:none" type="text" name="Photo_Reference" id="Photo_Reference" />
					<input type="file"
                               id="Upload_Photo"
                               data-picture_name_id="Photo_Reference"
                               data-picture_preview_id="Photo_Preview"
                               style="display:none"
                               class="Upload_GPicture" />

				@if (Model.Photo != null)
                { 
					  @Html.Partial("GAppComponents/GPicture/_Image", new KeyValuePair<String,GPicture>("Photo",Model.Photo))
                }
                else
                {
					 @Html.Partial("GAppComponents/GPicture/_Image", new KeyValuePair<String, GPicture>("Photo", new GPicture()) )
                }
				@Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                </div>
            </div>     
         <div class="form-group"> 
            @Html.LabelFor(model => model.Cellphone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Cellphone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cellphone, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.FaceBook, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.FaceBook, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FaceBook, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.WebSite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.WebSite, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WebSite, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_Training_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.TrainingYearId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("TrainingYearId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.TrainingYearId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.ModuleTrainingId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("ModuleTrainingId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.ModuleTrainingId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Hourly_Mass_To_Teach, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Hourly_Mass_To_Teach, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hourly_Mass_To_Teach, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.FormerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("FormerId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.FormerId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.GroupId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.DropDownList("GroupId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div> 
   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
@model TrainingIS.Entities.ModelsViews.Default_Form_WorkGroup_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
   
		 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div> 
         <div class="form-group"> 
            @Html.LabelFor(model => model.Selected_Formers, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    