@model TrainingIS.Entities.ModelsViews.Default_Form_AttendanceState_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base	
@using TrainingIS.BLL	
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}   
@section scripts {
    @Scripts.Render("~/bundles/Form")
	 <script>
		$(document).ready(function () {

	

}); 


    </script>
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm(Html.BeginForm(null, null, FormMethod.Post, new { id ="Create_Entity_Form" }))) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4 id="Create_Page_Title">@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })

		<div class="row" >
			<div class="col-md-6">
				<div class="panel panel-default">
					<div class="panel-heading">État d'assiduité</div>
					<div class="panel-body">
						<div class="form-group"> 
							@Html.LabelFor(model => model.TraineeId, htmlAttributes: new { @class = "control-label col-md-4" })
							<div class="col-md-8"> 
								@Html.DropDownList("TraineeId", null,"", htmlAttributes: new { @class = "form-control" } )
								@Html.ValidationMessageFor(model => model.TraineeId, "", new { @class = "text-danger" })
							</div>
						</div> 
							@if (User.IsInRole(RoleBLO.Admin_ROLE) || User.IsInRole(RoleBLO.Root_ROLE))
							{
								<div class="form-group" >
									@Html.LabelFor(model => model.Reference, htmlAttributes: new { @class = "control-label col-md-4" })
									<div class="col-md-8">
										@Html.EditorFor(model => model.Reference, new { htmlAttributes = new { @class = "form-control" } })
										@Html.ValidationMessageFor(model => model.Reference, "", new { @class = "text-danger" })
									</div>
								</div>
							}
							else
							{
								<div class="form-group" style="display: none;">
									@Html.LabelFor(model => model.Reference, htmlAttributes: new { @class = "control-label col-md-4" })
									<div class="col-md-8">
										@Html.EditorFor(model => model.Reference, new { htmlAttributes = new { @class = "form-control" } })
										@Html.ValidationMessageFor(model => model.Reference, "", new { @class = "text-danger" })
									</div>
								</div>
							}
					</div>
				</div>
			</div>
			<div class="col-md-6">
				<div class="panel panel-default">
					<div class="panel-heading">Note</div>
					<div class="panel-body">
						<div class="form-group"> 
							@Html.LabelFor(model => model.Valid_Note, htmlAttributes: new { @class = "control-label col-md-4" })
							<div class="col-md-8"> 
								@Html.EditorFor(model => model.Valid_Note, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.Valid_Note, "", new { @class = "text-danger" })
							</div>
						</div> 
						<div class="form-group"> 
							@Html.LabelFor(model => model.Invalid_Note, htmlAttributes: new { @class = "control-label col-md-4" })
							<div class="col-md-8"> 
								@Html.EditorFor(model => model.Invalid_Note, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.Invalid_Note, "", new { @class = "text-danger" })
							</div>
						</div> 
					</div>
				</div>
			</div>
		</div>
		<div class="row">
			<div class="col-md-6">
				<div class="form-group">
					<input type="submit" id="Create_Entity_Form" value="@msg_app.Save" class="btn btn-default" />
				</div>
			</div>
		</div>
 
		
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
