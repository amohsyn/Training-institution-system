@model TrainingIS.Entities.ModelsViews.Default_TraineeFormView
@using TrainingIS.Entities
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base	
@{
     ViewBag.Title = ViewBag.msg["Edit_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}
@section scripts {
    @Scripts.Render("~/bundles/Form")
	<script>
		$(document).ready(function () {
	
		});  	
}); 
    </script>
}

<div class="x_panel">
    <div class="x_content">

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
      
    <div class="form-horizontal">
        <h4>@ViewBag.msg["Edit_Title"] : @Model</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        
         <div class="form-group">  
            @Html.LabelFor(model => model.CNE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
				 @Html.EditorFor(model => model.CNE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CNE, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">  
            @Html.LabelFor(model => model.DateRegistration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
				 @Html.TextBoxFor(model => model.DateRegistration, new { @class = "form-control has-feedback-left datetimepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.DateRegistration, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">  
            @Html.LabelFor(model => model.isActif, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
				 @(Html.EnumDropDownList<IsActifEnum>("isActif", new { @class = "form-control" }))
                @Html.ValidationMessageFor(model => model.isActif, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">  
            @Html.LabelFor(model => model.SchoollevelId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
				 @Html.DropDownList("SchoollevelId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.SchoollevelId, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">  
            @Html.LabelFor(model => model.GroupId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
				 @Html.DropDownList("GroupId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">  
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
				 @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">  
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
				 @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">  
            @Html.LabelFor(model => model.FirstNameArabe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
				 @Html.EditorFor(model => model.FirstNameArabe, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstNameArabe, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">  
            @Html.LabelFor(model => model.LastNameArabe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
				 @Html.EditorFor(model => model.LastNameArabe, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastNameArabe, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">  
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
				 @(Html.EnumDropDownList<SexEnum>("Sex", new { @class = "form-control" }))
                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">  
            @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
				 @Html.TextBoxFor(model => model.Birthdate, new { @class = "form-control has-feedback-left datetimepicker" })
 <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">  
            @Html.LabelFor(model => model.NationalityId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
				 @Html.DropDownList("NationalityId", null,"", htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.NationalityId, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">  
            @Html.LabelFor(model => model.BirthPlace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
				 @Html.EditorFor(model => model.BirthPlace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthPlace, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">  
            @Html.LabelFor(model => model.CIN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
				 @Html.EditorFor(model => model.CIN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CIN, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">  
            @Html.LabelFor(model => model.Cellphone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
				 @Html.EditorFor(model => model.Cellphone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cellphone, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">  
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
				 @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">  
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
				 @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">  
            @Html.LabelFor(model => model.FaceBook, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
				 @Html.EditorFor(model => model.FaceBook, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FaceBook, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">  
            @Html.LabelFor(model => model.WebSite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
				 @Html.EditorFor(model => model.WebSite, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WebSite, "", new { @class = "text-danger" })
            </div>
        </div>
  
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

	</div>
</div>

<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>   

