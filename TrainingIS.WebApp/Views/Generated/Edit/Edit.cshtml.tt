<#@ template language="C#" debug="true"   hostspecific="true"#>
<#@ output extension=".cshtml"#> 
<#@ include file="lib.ttinclude" #>
<#@ assembly name="GAppTemp\bin\Debug\GAppTemp.dll" #>
<#@ assembly name="TrainningIS.DAL\bin\Debug\TrainingIS.DAL.dll" #>
<#@ assembly name="TrainningIS.DAL\bin\Debug\EntityFramework.dll" #>
<#@ assembly name="TrainningIS.DAL\bin\Debug\EntityFramework.SqlServer.dll" #>
<#@ import namespace="GApp.WebApp.Manager.Generator" #>
<#@ import namespace="System.Data.Entity" #> 
<#@ import namespace="TrainingIS.DAL" #>
<#@ assembly name="EnvDte" #>      
<#       
    EntityService<TrainingISModel> entityService = new EntityService<TrainingISModel>();
	List<Type> Entities = entityService.getAllEntities();

	// Create file for All Entities
	var manager = TemplateFileManager.Create(this);
#>
  
<#   
	foreach(Type entityType in Entities)
    {   
		manager.StartNewFile(entityType.Name.Pluralize() + "_Edit.cshtml");
		EntityGeneratorWork<TrainingISModel> entityGenWork = new EntityGeneratorWork<TrainingISModel>(entityType);
#>
<#=entityGenWork.GetUsingModel_In_EditView()#>

@{
     ViewBag.Title = ViewBag.msg["Edit_Title"];  
}

@section Style {
    @Styles.Render("~/Content/Form")
}
@section scripts {
    @Scripts.Render("~/bundles/Form")
}

<div class="x_panel">
    <div class="x_content">

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@ViewBag.msg["Edit_Title"] : @Model</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        
<# foreach(var propertyInfo in entityGenWork.GetEditProperties()) { #>
         <div class="form-group"> 
            @Html.LabelFor(model => model.entity.<#= propertyInfo.Name #>, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    <#= Tags<TrainingISModel>.EditorFor(propertyInfo) #>
                @Html.ValidationMessageFor(model => model.entity.<#= propertyInfo.Name #>, "", new { @class = "text-danger" })
            </div>
        </div>
<# } #>  
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

	</div>
</div>

<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>   

<#
} // for
manager.Process();
#>


