<#@ template language="C#" debug="true"   hostspecific="true"#>
<#@ output extension=".cshtml"#> 
<#@ include file="lib.ttinclude" #>
<#@ assembly name="GAppTemp\bin\Debug\GAppTemp.dll" #>
<#@ assembly name="TrainningIS.DAL\bin\Debug\TrainingIS.DAL.dll" #>
<#@ assembly name="TrainningIS.DAL\bin\Debug\EntityFramework.dll" #>
<#@ assembly name="TrainningIS.DAL\bin\Debug\EntityFramework.SqlServer.dll" #>
<#@ assembly name="TrainingIS.Entities\bin\Debug\TrainingIS.Entities.dll" #> 
<#@ import namespace="GApp.WebApp.Manager.Generator" #>
<#@ import namespace="System.Data.Entity" #> 
<#@ import namespace="TrainingIS.Entities.ModelsViews.Generated" #>
<#@ import namespace="TrainingIS.DAL" #>
<#@ include file="..\IncludesTemplate\UsingModel.ttinclude" #>    
<#        
    EntityService<TrainingISModel> entityService = new EntityService<TrainingISModel>();
	List<Type> Entities = entityService.getAllEntities();
 
	// Create file for All Entities
	var manager = TemplateFileManager.Create(this);
#>
   
<#   
	foreach(Type entityType in Entities)
    {    
		manager.StartNewFile(entityType.Name.Pluralize() + "_Create.cshtml");

		Dictionary<Type, List<Type>> Default_ModelsViewsTypes = new DefaultModelView_MetaData().ModelsViewsTypes;
		View_CodeGenerator<TrainingISModel> View_CodeGenerator = new View_CodeGenerator<TrainingISModel>(entityType,Default_ModelsViewsTypes);
		ModelView_CodeGenerator<TrainingISModel>  modelView_CodeGenerator = new ModelView_CodeGenerator<TrainingISModel>(entityType, Default_ModelsViewsTypes);
		Tags<TrainingISModel> tags = new Tags<TrainingISModel>(entityType);
#>
<#=View_CodeGenerator.GetUsingModel_In_CreateView()#>
@using TrainingIS.Entities
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base		
@{
    ViewBag.Title = @ViewBag.msg["Create_Title"]; 
}

@section Style {
    @Styles.Render("~/Content/Form")
} 
@section scripts {
    @Scripts.Render("~/bundles/Form")
}
 
<div class="x_panel">
    <div class="x_content">
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
		<h4>@ViewBag.msg["Create_Title"]</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
  
		 
<# foreach(var propertyInfo in modelView_CodeGenerator.GetCreatedProperties()) { #>

         <div class="form-group"> 
            @Html.LabelFor(model => model.<#= propertyInfo.Name #>, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
			    <#= tags.EditorFor(propertyInfo) #>
                @Html.ValidationMessageFor(model => model.<#= propertyInfo.Name #>, "", new { @class = "text-danger" })
            </div>
        </div> 
<# } #>   
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@msg_app.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>
<#
} // for
manager.Process();
#>


