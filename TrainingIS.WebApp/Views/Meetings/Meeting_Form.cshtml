@model TrainingIS.Models.Meetings.Form_Meeting_Model
@using TrainingIS.Entities
@using TrainingIS.Entities.enums
@using TrainingIS.WebApp.Helpers
@using TrainingIS.Entities.Base

@{
    Layout = null;
}

@Html.AntiForgeryToken()
<div class="form-horizontal">
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    <div class="Row">
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">Objet</div>
                <div class="panel-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.MeetingDate, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.MeetingDate, new { @class = "form-control has-feedback-left datepicker" })
                            <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                            @Html.ValidationMessageFor(model => model.MeetingDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.WorkGroupId, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <input type="hidden" id="WorkGroupId" name="WorkGroupId" value="@Model.WorkGroupId" />
                            <label data-toggle="tooltip" id="WorkGroup_Code" ata-placement="left" title="@ViewBag.WorkGroup.Name" class="form-control">@ViewBag.WorkGroup.Code</label>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Mission_Working_GroupId, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @if (Model.Id == 0)
                            { // Create
                                @Html.DropDownList("Mission_Working_GroupId", null, "", htmlAttributes: new { @class = "form-control" })
                            }
                            else
                            { // Edit
                                @Html.DropDownList("Mission_Working_GroupId", null, "", htmlAttributes: new { @class = "form-control" })
                                <input type="hidden" id="Mission_Working_GroupId" name="Mission_Working_GroupId" value="@Model.Mission_Working_GroupId" />
                                <label data-toggle="tooltip" id="WorkGroup_Code" ata-placement="left" title="@ViewBag.WorkGroup.Name" class="form-control">@ViewBag.WorkGroup.Code</label>
                            }

                            @Html.ValidationMessageFor(model => model.Mission_Working_GroupId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">Présences des membres</div>
                <div class="panel-body">
                    @if (Model.WorkGroup.President != null)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.Presence_Of_President, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    <label class="form-control">
                                        @Html.EditorFor(model => model.Presence_Of_President, new { htmlAttributes = new { @class = "flat" } })
                                        @Model.President_Name
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.Presence_Of_President, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    }
                    @if (Model.WorkGroup.VicePresident != null)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.Presence_Of_VicePresident, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    <label class="form-control">
                                        @Html.EditorFor(model => model.Presence_Of_VicePresident, new { htmlAttributes = new { @class = "flat" } })


                                        @Model.VicePresident_Name
                                    </label>
                                </div>


                                @Html.ValidationMessageFor(model => model.Presence_Of_VicePresident, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    }
                    @if (Model.WorkGroup.Protractor != null)
                    {

                        <div class="form-group">
                            @Html.LabelFor(model => model.Presence_Of_Protractor, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    <label class="form-control">

                                        @Html.EditorFor(model => model.Presence_Of_Protractor, new { htmlAttributes = new { @class = "flat" } })


                                        @Model.Protractor_Name
                                    </label>
                                </div>


                                @Html.ValidationMessageFor(model => model.Presence_Of_Protractor, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }



                    @if (Model.WorkGroup.MemebersFormers?.Count() > 0)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.Selected_Presences_Of_Formers, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.Select_Tag(model => model.Selected_Presences_Of_Formers, ViewBag.Data_Selected_Presences_Of_Formers as List<BaseEntity>, true);
                                @Html.ValidationMessageFor(model => model.Selected_Presences_Of_Formers, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    @if (Model.WorkGroup.MemebersAdministrators?.Count() > 0)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.Selected_Presences_Of_Administrators, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.Select_Tag(model => model.Selected_Presences_Of_Administrators, ViewBag.Data_Selected_Presences_Of_Administrators as List<BaseEntity>, true);
                                @Html.ValidationMessageFor(model => model.Selected_Presences_Of_Administrators, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    @if (Model.WorkGroup.MemebersTrainees?.Count() > 0)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.Selected_Presences_Of_Trainees, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.Select_Tag(model => model.Selected_Presences_Of_Trainees, ViewBag.Data_Selected_Presences_Of_Trainees as List<BaseEntity>, true);
                                @Html.ValidationMessageFor(model => model.Selected_Presences_Of_Trainees, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>

        @if (Model.WorkGroup.GuestAdministrator || Model.WorkGroup.GuestFormers || Model.WorkGroup.GuestTrainees)
        {
            <div class="col-md-6">
                <div class="panel panel-default">
                    <div class="panel-heading">Présences des invités</div>
                    <div class="panel-body">

                        @if (Model.WorkGroup.GuestAdministrator)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Selected_Presences_Of_Guests_Administrators, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.Select_Tag(model => model.Selected_Presences_Of_Guests_Administrators, ViewBag.Data_Selected_Presences_Of_Guests_Administrators as List<BaseEntity>, true);
                                    @Html.ValidationMessageFor(model => model.Selected_Presences_Of_Guests_Administrators, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                        @if (Model.WorkGroup.GuestFormers)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Selected_Presences_Of_Guests_Formers, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.Select_Tag(model => model.Selected_Presences_Of_Guests_Formers, ViewBag.Data_Selected_Presences_Of_Guests_Formers as List<BaseEntity>, true);
                                    @Html.ValidationMessageFor(model => model.Selected_Presences_Of_Guests_Formers, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                        @if (Model.WorkGroup.GuestTrainees)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Selected_Presences_Of_Guests_Trainees, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.Select_Tag(model => model.Selected_Presences_Of_Guests_Trainees, ViewBag.Data_Selected_Presences_Of_Guests_Trainees as List<BaseEntity>, true);
                                    @Html.ValidationMessageFor(model => model.Selected_Presences_Of_Guests_Trainees, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }


    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="@msg_app.Save" class="btn btn-default" />
        </div>
    </div>
</div>