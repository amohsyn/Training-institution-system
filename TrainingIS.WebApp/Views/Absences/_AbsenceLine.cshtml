@model TrainingIS.Models.Absences.Entry_Absence_Model
@{
    Layout = null;
}

@{
    // Calculate Photo Path
    string image_path = @Url.Content("~/") + "Content/GApp.WebApp/images/user.png";
    string image_Small = image_path;
    string image_Medium = image_path;

    if (Model.Trainee.Photo != null)
        image_Small = @Url.Content("~/") + Model.Trainee.Photo.Small_Thumbnail;

    if (Model.Trainee.Photo != null)
        image_Medium = @Url.Content("~/") + Model.Trainee.Photo.Medium_Thumbnail;

    // Calculate Attendance State

   
    string attendance_State_html = "";
    if (Model.Last_Valid_Attendance_Sanction != null)
        attendance_State_html += string.Format("<p>Sanction d'assiduité <b style='Color:Red'>{0}</b></p>", Model.Last_Valid_Attendance_Sanction.SanctionCategory.ToString());
    if (Model.Last_Valid_Assiduite_Sanction != null)
        attendance_State_html += string.Format("<p>Sanction de comportement :<b> {0}</b></p>", Model.Last_Valid_Assiduite_Sanction.SanctionCategory.ToString());
    if (Model.AttendanceState != null)
    
        attendance_State_html += string.Format("<p>Note d'assiduité  : <b style='Color:Red'>{0}/15 ({1}/20) </b></p>", Model.Invalid_Note.ToString(), ((Convert.ToSingle(Model.Invalid_Note) / 15) * 20).ToString("0.00"));
    
}


<td class="GPicture hidden-xs">
    <img data-toggle="popover_tr" src='@image_Small' style='width: 85px;' data-content="<img src='@image_Medium'  style='width: 250px;'  />" title="@Model.Trainee.FirstName @Model.Trainee.LastName" />

</td>

<td>@Model.TraineeFirstName </td>
<td>@Model.TraineeLastName </td>
<td class="hidden-xs">@Html.GAppDisplayFor(modelModel => Model.isHaveAuthorization)</td>
<td class="hidden-xs">


    <div data-toggle="popover_tr" data-content="@attendance_State_html">
        @Html.GAppDisplayFor(modelModel => Model.AbsenceCount)
    </div>
</td>
<td class="hidden-xs">@Html.GAppDisplayFor(modelModel => Model.AbsenceCount_In_Current_Module)</td>
<td>
    @if (Model.InValideAbsenceCount > 0)
    {

        string msg_invalide_absence = "";
        if (Model.InValideAbsenceCount == 1)
        {
            msg_invalide_absence = "Une absence non valide";
        }
        if (Model.InValideAbsenceCount > 1)
        {
            msg_invalide_absence = string.Format("{0} absences non valide", Model.InValideAbsenceCount);
        }

        <span class="fa fa-bell-o fa-2x" data-toggle="tooltip" data-placement="top" title="@msg_invalide_absence"></span>
    }

</td>
<td>
    @if (!Model.IsAbsent)
    {
        <span onclick="Delete_Absence(@Model.TraineeId,@Model.SeanceTrainingId)" class="link_action absent_icon">
        </span>
    }
    else
    {
        <span class="link_action present_icon" onclick="Create_Absence(@Model.TraineeId,@Model.SeanceTrainingId)">
        </span>
    }
</td>

