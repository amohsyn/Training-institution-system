@model TrainingIS.Entities.TrainingYear
@using TrainingIS.WebApp.Ressources.Views.TrainingYears
@using TrainingIS.Entities.Ressources.TrainingYearRessources
@using GApp.Core.Extentions
@{
    ViewBag.Title = @msg_app.Create_New + " " + @msg_TrainingYear.OneSingularName;
}

<h2> @msg_app.Create_New @msg_TrainingYear.OneSingularName </h2>

<input type="text" class="form-control " id="11" >

<div class="col-md-11 xdisplay_inputx form-group has-feedback">
    <input type="text" class="form-control has-feedback-left" id="single_cal" placeholder="First Name" aria-describedby="inputSuccess2Status">
    <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
    <span id="inputSuccess2Status" class="sr-only">(success)</span>
</div>
 
<div class="x_panel">
    <div class="x_title">
        <h4>@msg_TrainingYear.SingularName.FirstLetterToUpperCase()</h4>
    </div>
    <div class="x_content">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndtDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EndtDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        @Html.ValidationMessageFor(model => model.EndtDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>



</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        // $('#11').datetimepicker();


    </script>
}

