@model TrainingIS.Entities.EntityPropertyShortcut

@{
    ViewBag.Title = @ViewBag.msg["Create_Title"];
}

@section Style {
    @Styles.Render("~/Content/Form")
}
@section scripts {
    @Scripts.Render("~/bundles/Form")
    <script>
        function getPropertiesNamesList() {

            var EntityName = $("#EntityName_DDL").val();
            $.ajax
                ({
                    url: '/EntityPropertyShortcuts/GetPropertiesNamesList',
                    type: 'GET',
                    datatype: 'application/json',
                    contentType: 'application/json',
                    data: { EntityName: EntityName }  ,
                    success: function (result) {
                        $("#PropertyName_DDL").html("");
                        $.each($.parseJSON(result), function (i, PropertyName) {
                            $("#PropertyName_DDL").append
                                ($('<option></option>').val(PropertyName).html(PropertyName))
                        })
                    },
                    error: function () {
                        alert("Erreur load properties Names")
                    },
                });
        }
    </script>
}

<div class="x_panel">
    <div class="x_content">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <h4>@ViewBag.msg["Create_Title"]</h4>
                <hr />
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.EntityName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("EntityName", null, htmlAttributes: new { @class = "form-control" , onchange = "getPropertiesNamesList()", id = "EntityName_DDL" })
                        @Html.ValidationMessageFor(model => model.EntityName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PropertyName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("PropertyName", null, htmlAttributes: new { @class = "form-control", id = "PropertyName_DDL" })
                        @Html.ValidationMessageFor(model => model.PropertyName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PropertyShortcutName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PropertyShortcutName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PropertyShortcutName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="@msg_app.Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

    </div>
</div>
<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
    </div>
</div>


