<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>
@using TrainingIS.WebApp.Views.<#= ViewDataTypeShortName #>s.msg

@section Style{
    @Styles.Render("~/Content/Manager/Details")
}

<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title =   @msg_app.Details;
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}
<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>

<div class="x_panel">
    <div class="x_title">
        <h2> @Model.ToString()</h2>
        <div class="clearfix"></div>
    </div>
    <div class="x_content">


     <dl class="details_model">
<#
foreach (PropertyMetadata property in ModelMetadata.Properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }

		// Note generate for : Order, Reference
		if( property.PropertyName == "Ordre" 
			|| property.PropertyName == "Reference"  
		) 
			continue;
#>
        <dt>
            @Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
        </dt>

        <dd>
		 <#if (property.IsAssociation){#><#= "@Model." + GetValueExpression(property) + ".ToString()" #>
		 <#}else{#>@Html.DisplayFor(model => <#= "model." + GetValueExpression(property) #>)<#}#>
        </dd>

<#
    }
}
#>
    </dl>
   </div>
</div>
 

<#
string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>

<div class="x_panel">
    <div class="x_content">
        <a href="@Url.Action("Index")" class="btn btn-app">
            <i class="fa fa-close"></i>  @msg_app.Back_to_List
        </a>
		<a href="@Url.Action("Edit")/@Model.Id" class="btn btn-app">
            <i class="fa fa-edit"></i>  @msg_app.Edit
        </a>
    </div>
</div>  

<#
} else {
#>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    @Html.ActionLink("Back to List", "Index")
<#
}
#>
 
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>