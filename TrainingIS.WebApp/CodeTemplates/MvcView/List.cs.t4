<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@section Style{
    @Styles.Render("~/Content/Manager/Index")
}
@section scripts{
    @Scripts.Render("~/bundles/Manager/Index")
    <script>
        $("#dataTable").DataTable({
            language: dataTable_language_fr,
			 select: true
        });

		$("#bt_import").click(function(){
            var display = $("#import_form").css("display");
            if (display == "none") {
                $("#import_form").show();
            } else {
                $("#import_form").hide();
            }
        });
    </script>
}

@{
    ViewBag.Title = ViewBag.msg["Index_Title"];
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>

<div class="x_panel">
    <div class="x_title">
        <h2>@ViewBag.msg["Index_Title"]</h2>
        <ul class="nav navbar-right panel_toolbox">
            <li>
                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
            </li>
			
        </ul>
        <div class="clearfix"></div>
    </div>
    <div class="x_content">
        <a href="@Url.Action("Create")" class="btn btn-app">
            <i class="fa fa-plus"></i>  @msg_app.Create_New
        </a>
		<a href="@Url.Action("Export")" class="btn btn-app">
			<i class="fa fa-file-excel-o"></i>  Export
		</a>
		<a href="#" class="btn btn-app" id="bt_import">
				<i class="fa fa-file-excel-o"></i>  Import
		</a>
		@using (Html.BeginForm("Import", ViewContext.RouteData.Values["controller"].ToString(), FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div  id="import_form" class="container" style="display : none">
                <hr />
                <div  class="row" >

                    <div class="col-md-3">
                        <input required class="btn btn-app" type="file" name="import_objects" value="choose file" />
                    </div>

                    <div class="col-md-2">
                        <input class="btn btn-app " type="submit" value="Importer" />
                    </div>


                </div>
            </div>
        }
    </div>
</div>

 <div class="x_panel">
    <div class="x_content">

<table id="dataTable" class="table table-striped table-bordered">
<thead>
    <tr>
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
foreach (PropertyMetadata property in properties) {

         // Note generate for : UpdateDate, CreatedDate
		if( property.PropertyName == "Ordre"  
			|| property.PropertyName == "CreateDate" 
			|| property.PropertyName == "UpdateDate" 
			|| property.PropertyName == "Reference" 
		) 
			continue;

    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <th>
            @Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
        </th>
<#
    }
}
#>
        <th></th>
    </tr>
</thead>
 <tbody>

@foreach (var item in Model) {
    <tr>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {

	     // Note generate for : UpdateDate, CreatedDate
		if( property.PropertyName == "Ordre"  
			|| property.PropertyName == "CreateDate" 
			|| property.PropertyName == "UpdateDate" 
			|| property.PropertyName == "Reference" 
		) 
			continue;
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <td><#if (property.IsAssociation){#><#= "@(item." + GetValueExpression(property) + "?.ToString())" #>
		 <#}else{#>@Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)<#}#>
        </td>
<#
    }
}

string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
		<td>
							<a href="@Url.Action("Details")/@item.<#= pkName #>" class="link_action" title="@msg_app.Details" data-toggle="tooltip" data-placement="top">
                                <i class="fa fa-info fa-2x"></i>  
							</a>
                            <a href="@Url.Action("Edit")/@item.<#= pkName #>" class="link_action" title="@msg_app.Edit" data-toggle="tooltip" data-placement="top">
                                <i class="fa fa-edit fa-2x"></i>  
                            </a>
                            <a href="@Url.Action("Delete")/@item.<#= pkName #>" class="link_action" title="@msg_app.Delete" data-toggle="tooltip" data-placement="top">
                                <i class="fa fa-trash fa-2x"></i>  
                            </a>
         </td>
<#
} else {
#>
        <td>
            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
        </td>

<#
}
#>
    </tr>
}
 </tbody>
</table>
	</div>
</div>

<div>Manager v 0.1.4</div>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>