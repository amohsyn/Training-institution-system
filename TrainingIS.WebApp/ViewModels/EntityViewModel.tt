<#@ template language="C#" debug="true" hostspecific="true"#>
<#@ output extension=".cs"#>
<#@ include file="lib.ttinclude" #>
<#@ assembly name="GAppTemp\bin\Debug\GAppTemp.dll" #>
<#@ assembly name="TrainningIS.DAL\bin\Debug\TrainingIS.DAL.dll" #>
<#@ assembly name="TrainningIS.DAL\bin\Debug\EntityFramework.dll" #>
<#@ assembly name="TrainningIS.DAL\bin\Debug\EntityFramework.SqlServer.dll" #>
<#@ import namespace="GApp.WebApp.Manager.Generator" #>
<#@ import namespace="System.Data.Entity" #> 
<#@ import namespace="TrainingIS.DAL" #>

<#       
    EntityService<TrainingISModel> entityService = new EntityService<TrainingISModel>();
	List<Type> Entities = entityService.getAllEntities();

	// Create file for All Entities
	var manager = TemplateFileManager.Create(this);
#>
<#
	foreach(Type entityType in Entities)
    {
		manager.StartNewFile(entityType.Name + "ViewModel.cs");
		EntityGeneratorWork<TrainingISModel> entityGenWork = new EntityGeneratorWork<TrainingISModel>(entityType);
#>

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using TrainingIS.Entities;

namespace TrainingIS.WebApp.ViewModels
{
    // Generated by Manager v 0.2.0
    public class Base<#= entityType.Name #>ViewModel
    {
        public <#= entityType.Name #> entity { get; set; }

        public Base<#= entityType.Name #>ViewModel(<#= entityType.Name #> entity)
        {
            this.entity = entity;
        }

        //public int Age
        //{
        //    get
        //    {
        //        int age = DateTime.Now.Year - this.trainee.Birthdate.Year;
        //        if (this.trainee.Birthdate > DateTime.Now.AddYears(-age))
        //        {
        //            age--;
        //        }
        //        return age;
        //    }
        //}
    }
    public partial class <#= entityType.Name #>ViewModel : Base<#= entityType.Name #>ViewModel {
        public <#= entityType.Name #>ViewModel(<#= entityType.Name #> entity):base(entity) {}
    };
}
<#
} // for
manager.Process();
#>
