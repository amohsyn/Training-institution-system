<#@ template language="C#" debug="true"   hostspecific="true"#>
<#@ CleanupBehavior processor="T4VSHost" CleanupAfterProcessingtemplate="true" #>  
<#@ output extension=".cs"#> 
<#@ include file="..\Lib\Imports.include.t4" #>
<#@ include file="..\Lib\lib.ttinclude" #> 
<# 
	// Create file for All Entities
	var manager = TemplateFileManager.Create(this);  
	List<Type> Entities = Entity_Form_Model_Code<TrainingISModel>.GetEntitiesTypes();
	foreach(Type entityType in Entities)
    { 
		Entity_Form_Model_Code<TrainingISModel> Entity_Form_Model_Code = new Entity_Form_Model_Code<TrainingISModel>(entityType,new TrainingIS.Models.GAppDevContext()); 
		manager.StartNewFile(Entity_Form_Model_Code.Form_Model_ClassName + ".cs");
		 
#>using GApp.Core.Entities.ModelsViews;
using System; 
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using GApp.Models.DataAnnotations;
using GApp.Models;
using GApp.Entities;
using TrainingIS.Entities.enums;
<# foreach (var item in Entity_Form_Model_Code.NamesSapces){#>
using <#= item #>;  
<#}#> 
namespace TrainingIS.Entities.ModelsViews
{
	[EditView(typeof(<#= entityType.Name #>))]
	[CreateView(typeof(<#= entityType.Name #>))]
    public class <#=Entity_Form_Model_Code.Form_Model_ClassName #> : BaseModel
    {
<#  foreach (var codeProperty in Entity_Form_Model_Code.CodeProperties)
    { 
#>		<#= codeProperty #>  
   
<#   
    } 
#>
    }
}    
<# } 
manager.Process();
#>