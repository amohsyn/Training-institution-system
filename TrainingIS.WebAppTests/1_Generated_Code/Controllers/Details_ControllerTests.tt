<#@ template language="C#" debug="true"   hostspecific="true"#>
<#@ CleanupBehavior processor="T4VSHost" CleanupAfterProcessingtemplate="true" #>  
<#@ output extension=".cs"#> 
<#@ include file="..\Lib\Imports.include.t4" #>
<#@ include file="..\Lib\lib.ttinclude" #> 
<#    
	// Create file for All Entities
	var manager = TemplateFileManager.Create(this);  
	List<Type> Entities = Details_Controller_Tests<TrainingISModel>.GetEntitiesTypes();
	foreach(Type entityType in Entities)
    {    
		Details_Controller_Tests<TrainingISModel> Generator = new Details_Controller_Tests<TrainingISModel>(entityType,new TrainingIS.Models.GAppDevContext()); 
		var Code = Generator.Code;
		manager.StartNewFile(Code.FileName);
#>
using Microsoft.VisualStudio.TestTools.UnitTesting;
using TrainingIS.WebApp.Controllers;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web.Mvc;
using TrainingIS.Entities;
using AutoFixture;
using TrainingIS.BLL;
using TrainingIS.DAL;
using TrainingIS.WebApp.Tests.ViewModels;
using System.ComponentModel.DataAnnotations;
using GApp.WebApp.Tests;
using GApp.WebApp.Manager.Views;
using TrainingIS.WebApp.Tests.TestUtilities;
using GApp.Entities;
using GApp.BLL.Enums;
using GApp.BLL.VO;
using TrainingIS.WebApp.Tests.Services;
<# foreach (var name_space in Code.Expcected_NameSpaces) { #>
using <#= name_space #>;
<#}#>
using TrainingIS.BLL.ModelsViews;

namespace TrainingIS.WebApp.Controllers.Tests
{
    [TestClass()]
    public class <#=Code.ClassName#> : ManagerControllerTests
    {
      
    }
}

<#
} // for
manager.Process();
#>