<#@ template language="C#" debug="true" hostspecific="true"#>
<#@ output extension=".cs"#>
<#@ include file="lib.ttinclude" #>
<#@ assembly name="GAppTemp\bin\Debug\GAppTemp.dll" #>
<#@ assembly name="TrainningIS.DAL\bin\Debug\TrainingIS.DAL.dll" #>
<#@ assembly name="TrainningIS.DAL\bin\Debug\EntityFramework.dll" #>
<#@ assembly name="TrainningIS.DAL\bin\Debug\EntityFramework.SqlServer.dll" #>
<#@ assembly name="TrainingIS.Entities\bin\Debug\TrainingIS.Entities.dll" #> 
<#@ assembly name="GAppTemp\bin\Debug\GAppTemp.dll" #>  
<#@ import namespace="GApp.WebApp.Manager.Generator" #>
<#@ import namespace="System.Data.Entity" #>    
<#@ import namespace="TrainingIS.DAL" #> 
<#@ import namespace="GApp.WebApp.Manager.Views" #>
<#@ import namespace="GApp.Dev.Generator" #>
<#@ import namespace="TrainingIS.Entities.ModelsViews.Generated" #>

<#       
    EntityService<TrainingISModel> entityService = new EntityService<TrainingISModel>();
	List<Type> Entities = entityService.getAllEntities();
 
	// Create file for All Entities
	var manager = TemplateFileManager.Create(this);
#> 
<# 
	foreach(Type entityType in Entities)
    { 

		ModelViewMetaData modelViewMetaData = new ModelViewMetaData(entityType);
		
		ModelView_CodeGenerator<TrainingISModel> ModelView_CodeGenerator =
               new ModelView_CodeGenerator<TrainingISModel>(entityType, new DefaultModelView_MetaData().ModelsViewsTypes);

		 
	    manager.StartNewFile(string.Format(ModelView_CodeGenerator.DetailsModelView_ClassName + ".cs", entityType.Name) );

		CodeStringCsharp codeStringCsharp = new CodeStringCsharp();
        List<string> NamesSapces = new List<string>();
        List<string> CodeProperties = new List<string>();
        codeStringCsharp.GenerateCodeProperties(ModelView_CodeGenerator.DefaultIndexProperties(), NamesSapces, CodeProperties);

#>
using GApp.Core.Entities.ModelsViews;
using System; 
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web.Mvc;
using TrainingIS.Entities.Resources.AppResources;
using GApp.Core.MetaDatas.Attributes; 
<# foreach (var item in NamesSapces){#>
using <#= item #>; 
<#}#>

namespace TrainingIS.Entities.ModelsViews
{
    
    public class <#=ModelView_CodeGenerator.DetailsModelView_ClassName #> : BaseModelView
    {
<#  foreach (var codeProperty in CodeProperties)
    { 
#>		<#= codeProperty #>  
   
<#   
    } 
#>
    }
}
<# } 
manager.Process();
#>
